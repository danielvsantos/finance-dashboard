generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Transaction {
  id              Int      @id @default(autoincrement())
  transaction_date DateTime
  year            Int
  quarter         String
  month           Int
  day             Int
  categoryId      Int
  description     String
  details         String?
  credit          Float?
  debit           Float?
  currency        String
  transfer        Boolean @default(false)
  accountId       Int
  numOfShares     Float?
  price           Float?
  ticker          String?
  userId          String?

  category Category @relation(fields: [categoryId], references: [id])
  account  Account  @relation(fields: [accountId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  id        Int    @id @default(autoincrement())
  country   String
  name      String
  transactions Transaction[]

  @@index([country])
  @@index([name])
}

model Category {
  id         Int    @id @default(autoincrement())
  name       String
  plCategory String
  plMacroCategory String?
  transactions Transaction[]

  @@unique([name], name: "category_name")
  @@index([plCategory])
}

model StockPrice {
  id        Int      @id @default(autoincrement())
  ticker    String   @unique
  price     Float
  lastUpdated DateTime @default(now())
}

model AnalyticsCacheMonthly {
  id               Int      @id @default(autoincrement())
  year             Int
  month            Int
  currency         String
  country          String
  plMacroCategory  String
  revenue          Float
  expenses         Float
  data             Json
  updatedAt        DateTime @updatedAt

  @@unique([year, month, currency, country, plMacroCategory], name: "year_month_currency_country_plMacroCategory")
}

model CurrencyRate {
  id           Int      @id @default(autoincrement())
  year         Int
  month        Int
  currencyFrom String
  currencyTo   String
  value        Float
  updatedAt    DateTime @default(now())

  @@unique([year, month, currencyFrom, currencyTo], name: "year_month_currencyFrom_currencyTo")

}

model PortfolioHolding {
  id         Int     @id @default(autoincrement())
  account    String
  category   String
  ticker     String
  sharesHeld Float

  @@unique([account, category, ticker], name: "unique_portfolio_holding")
}

model AuditLog {
  id        Int      @id @default(autoincrement())
  action    String
  table     String
  userId    String
  recordId  Int
  createdAt DateTime @default(now())
}