generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Transaction {
  id               Int      @id @default(autoincrement())
  transaction_date DateTime
  year             Int
  quarter          String
  month            Int
  day              Int
  categoryId       Int
  description      String
  details          String?
  credit           Float?
  debit            Float?
  currency         String
  accountId        Int
  numOfShares      Float?
  price            Float?
  ticker           String?
  userId           String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  account          Account  @relation(fields: [accountId], references: [id])
  category         Category @relation(fields: [categoryId], references: [id])


   @@index([year])
   @@index([month])

}

model Account {
  id            Int           @id @default(autoincrement())
  name          String
  accountNumber String
  bank          String
  currency      String
  country       String
  owner         String
  transactions  Transaction[]

  @@index([name])
  @@index([country])
  @@index([currency])
}

model Category {
  id           Int           @id @default(autoincrement())
  name         String        @unique
  group        String
  type         String
  transactions Transaction[]

  @@index([name])
  @@index([group])
  @@index([type])
}

model StockPrice {
  id          Int      @id @default(autoincrement())
  ticker      String   @unique
  price       Float
  lastUpdated DateTime @default(now())
}

model AnalyticsCacheMonthly {
  id        Int      @id @default(autoincrement())
  year      Int
  month     Int
  currency  String
  country   String
  type      String
  group     String
  balance   Float
  updatedAt DateTime @updatedAt
 

  @@unique([year, month, currency, country, type, group], name: "year_month_currency_country_type_group")
}

model CurrencyRate {
  id           Int      @id @default(autoincrement())
  year         Int
  month        Int
  currencyFrom String
  currencyTo   String
  value        Float
  updatedAt    DateTime @default(now())

  @@unique([year, month, currencyFrom, currencyTo], name: "year_month_currencyFrom_currencyTo")
}

model PortfolioHolding {
  id         Int    @id @default(autoincrement())
  account    String
  category   String
  ticker     String
  sharesHeld Float

  @@unique([account, category, ticker], name: "unique_portfolio_holding")
}

model AuditLog {
  id        Int      @id @default(autoincrement())
  action    String
  table     String
  userId    String
  recordId  Int
  createdAt DateTime @default(now())
}
